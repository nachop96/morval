{"version":3,"sources":["components/navbar/navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","create","NavBar","React","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","mobileMenuId","renderMobileMenu","IconButton","size","Badge","badgeContent","Box","sx","flexGrow","AppBar","Toolbar","edge","mr","Typography","variant","noWrap","component","xs","sm","placeholder","inputProps","md","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8261e924.chunk.js","sourcesContent":["// import { Component } from 'react';\r\n\r\n\r\n// class NavBar extends Component {\r\n//     render() { \r\n//         return <div>\r\n\r\n            \r\n            \r\n\r\n//         </div>;\r\n//     }\r\n// }\r\n \r\n// export default NavBar;\r\n\r\nimport * as React from 'react';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Badge from '@mui/material/Badge';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport MoreIcon from '@mui/icons-material/MoreVert';\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  '&:hover': {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: '100%',\r\n  [theme.breakpoints.up('sm')]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: 'auto',\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: '100%',\r\n  position: 'absolute',\r\n  pointerEvents: 'none',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: 'inherit',\r\n  '& .MuiInputBase-input': {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function NavBar() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"show 17 new notifications\"\r\n          color=\"inherit\"\r\n        >\r\n          <Badge badgeContent={17} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            sx={{ mr: 2 }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: 'none', sm: 'block' } }}\r\n          >\r\n            Morval\r\n          </Typography>\r\n          <Search>\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Buscar...\"\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </Search>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n            <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"error\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 17 new notifications\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={17} color=\"error\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </Box>\r\n          <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","import './App.css';\nimport NavBar from './components/navbar/navbar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}